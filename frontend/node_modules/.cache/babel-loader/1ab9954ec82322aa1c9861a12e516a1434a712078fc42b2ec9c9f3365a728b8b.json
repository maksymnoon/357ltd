{"ast":null,"code":"/*import Axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nexport default function ResetPasswordScreen() {\n  const navigate = useNavigate();\n  const { token } = useParams();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  useEffect(() => {\n    if (userInfo || !token) {\n      navigate('/');\n    }\n  }, [navigate, userInfo, token]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await Axios.post('/api/users/reset-password', {\n        password,\n        token,\n      });\n      navigate('/signin');\n      toast.success('Password updated successfully');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Reset Password</title>\n      </Helmet>\n      <h1 className=\"my-3\">Reset Password</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Reset Password</Button>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n*/","map":{"version":3,"names":[],"sources":["C:/mProjects/groupProject/357_test/frontend/src/screens/ResetPasswordScreen.js"],"sourcesContent":["/*import Axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nexport default function ResetPasswordScreen() {\n  const navigate = useNavigate();\n  const { token } = useParams();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  useEffect(() => {\n    if (userInfo || !token) {\n      navigate('/');\n    }\n  }, [navigate, userInfo, token]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await Axios.post('/api/users/reset-password', {\n        password,\n        token,\n      });\n      navigate('/signin');\n      toast.success('Password updated successfully');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Reset Password</title>\n      </Helmet>\n      <h1 className=\"my-3\">Reset Password</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Reset Password</Button>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}